paths:
  /api/products:
    get:
      summary: 'Retorna todos los productos disponibles'
      tags:
        - Productos
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "500":
          description: 'ERROR general'

  /api/products/{pid}:
    get:
      summary: 'Retorna un producto por id'
      tags:
        - 'Productos'
      parameters:
        - name: pid
          in: path
          required: true
          description: 'ID del producto'
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Product'
        "404":
          description: 'No se ha encontrado el producto con el id indicado'
        "500":
          description: 'ERROR general'

    put:
      summary: 'Actualiza un producto por id'
      tags:
        - 'Productos'
      parameters:
        - name: pid
          in: path
          required: true
          description: 'ID del producto'
      requestBody:
        description: 'Datos obligatorios en el body'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/updateProduct'
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Cart'
        "500":
          description: 'ERROR general'

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: objectId
          description: 'ID MongoDB'
        title:
          type: string
          description: 'Título del producto'
        description:
          type: string
          description: 'Descripción del producto'
        price:
          type: number
          description: 'Precio del producto'
        code:
          type: string
          description: 'Código del producto'
        stock:
          type: number
          description: 'Stock del producto'
        status:
          type: boolean
          description: 'Estado del producto'
        category:
          type: string
          description: 'Categoría del producto'
        thumbnail:
          type: string
          description: 'Imagen del producto'
        owner:
          type: string
          description: 'Dueño del producto'
          default: 'admin'
      
      example:
          _id: 60f3b3b3b3b3b3b3b3b3b3b3
          title: 'Bolsón de arena'
          description: 'Bolsón de arena de 1m3'
          price: 15000
          code: '123456'
          stock: 27
          status: true
          category: 'Bolsones'
          thumbnail: 'https://www.google.com'
          owner: 'admin'

  requestBodies:
    updateProduct:
      type: object
      properties:
        title:
          type: string
          description: 'Título del producto'
        description:
          type: string
          description: 'Descripción del producto'
          required: false
        price:
          type: number
          description: 'Precio del producto'
        code:
          type: string
          description: 'Código del producto'
        stock:
          type: number
          description: 'Stock del producto'
        status:
          type: boolean
          description: 'Estado del producto'
        category:
          type: string
          description: 'Categoría del producto'
        thumbnail:
          type: string
          description: 'Imagen del producto'
          required: false
        owner:
          type: string
          description: 'Dueño del producto'
          default: 'admin'